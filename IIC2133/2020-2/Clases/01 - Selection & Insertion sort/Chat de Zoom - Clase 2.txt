00:23:40	Rolf Sommer:	gracias profe, me alegra el dia
00:25:30	PABLO ARANEDA:	se usa b√∫squeda binaria en insertion sort?
00:25:46	Agustin Caracci:	me las juego con que cuesta lo mismo que el que vimos la clase pasada
00:26:11	Benjam√≠n √Ålvarez:	fijo
00:26:16	Pablo De Solminihac:	tama√±o fijo
00:26:16	ALONSO ORTEGA LOYOLA:	est√°n contiguos en memoria
00:26:17	PABLO ARANEDA:	acceso constatnte
00:26:19	Mat√≠as Patricio Duhalde:	elementos contiguos en memoria
00:26:20	MACARENA MU√ëOZ:	se busca en o(1)
00:26:25	Sol Covacic Palet:	es accesible constante O(1)
00:26:25	Fabi√°n Sep√∫lveda:	O(1)
00:27:00	VICENTE ERRAZURIZ QUIROGA:	y s√≠, el acceso es en tiempo constante
00:27:12	PABLO ARANEDA:	tama√±o variable
00:27:14	Sol Covacic Palet:	flexibles
00:27:18	MACARENA MU√ëOZ:	se le pueden agregar y quitar elementos
00:27:19	ALONSO ORTEGA LOYOLA:	pueden estar distribuidas en memoria
00:27:36	Benjam√≠n √Ålvarez:	en C los arrays son mutables?
00:27:41	Eduardo Oteiza:	no
00:27:48	PABLO ARANEDA:	acceso O(n)
00:27:50	Eduardo Oteiza:	ah lei mal, no lo c
00:27:50	Mart√≠n Ocqueteau:	se debe recorrer uno por uno
00:27:54	JOAQUIN ALLIENDE VACCARO:	si en contenido no en tama√±o
00:27:56	ALONSO ORTEGA LOYOLA:	toma m√°s tiempo el acceso
00:28:15	LAURENCE GOLBORNE:	para insertar un elemento en un arreglo es necesario definir un nuev arreglo?
00:28:35	VICENTE ERRAZURIZ QUIROGA:	> en C los arrays son mutables?los datos guardados en el array si, pero el array mismo no (largo y tipos fijo)
00:28:40	Eduardo Oteiza:	en lists ligadas demora m√°s buscar donde ponerlo, que ponerlo en si?
00:28:51	VICENTE ERRAZURIZ QUIROGA:	> en lists ligadas demora m√°s buscar donde ponerlo, que ponerlo en si?efectivamente
00:29:25	BERNARDO VALDIVIESO OSEKOWSKA:	asumimos que sabemos la cantidad de elementos, no?
00:29:28	VICENTE ERRAZURIZ QUIROGA:	> para insertar un elemento en un arreglo es necesario definir un nuev arreglo?Depende, si queda espacio libre en tu arreglo no es necesario
00:29:29	BERNARDO VALDIVIESO OSEKOWSKA:	para hacer el arreglo
00:29:50	N:	1 y n
00:29:51	Juan Pablo Olivares:	n?
00:29:53	VICENTE ERRAZURIZ QUIROGA:	> asumimos que sabemos la cantidad de elementos, no?si, al crear un arrelgo debes indicar el largo que tendr√°
00:29:54	PABLO ARANEDA:	en arreglos puede ser log(n) ?
00:29:56	Eduardo Oteiza:	en el caso del arreglo, lo que cuesta mas es mover los otros elementos?
00:29:59	Benjamin Urrutia:	log(n) en arreglos usando busqueda binaria
00:30:22	Sol Covacic Palet:	pero no se pueden insertar elementos,o no?
00:30:24	VICENTE ERRAZURIZ QUIROGA:	> en el caso del arreglo, lo que cuesta mas es mover los otros elementos?efectivamente
00:30:51	smbarraza:	En una lista ligada. Es necesario que el puntero del ultimo elemento sea hacia el inicio de la misma, o puede ser Null por ejemplo?
00:31:05	Juan Jim√©nez:	mover los demas
00:31:06	ALONSO ORTEGA LOYOLA:	hay que hacer denuevo un arreglo
00:31:08	MACARENA MU√ëOZ:	tengo que hacer un arreglo nuevo
00:31:08	Elisa Fern√°ndez:	no lo puedo sgregar
00:31:08	PABLO ARANEDA:	se tienen que mover todos los siguientes
00:31:29	VICENTE ERRAZURIZ QUIROGA:	> En una lista ligada. Es necesario que el puntero del ultimo elemento sea hacia el inicio de la misma, o puede ser Null por ejemplo?Si haces que apunte al prinicpio lo que tienes es un ciclo m√°s que una lista‚Ä¶ cuando la est√°s recorriendo como sabes donde termina? Necesitas un NULL, igual que en los strings
00:32:10	PABLO ARANEDA:	n
00:32:37	Tom√°s C:	n
00:32:38	PABLO ARANEDA:	n
00:32:39	Sol Covacic Palet:	O(n)
00:32:39	MACARENA MU√ëOZ:	n
00:32:59	JOAQUIN ALLIENDE VACCARO:	b√∫squeda binaria = O(log(n))?
00:33:01	ALONSO ORTEGA LOYOLA:	hago bin search y cambio el puntero del elemento anterior y le asigno el puntero del que insert√© al elemento siguiente
00:33:03	Teresita S:	Y se tienen que hacer un nuevo arreglo cierto?
00:33:04	PABLO ARANEDA:	b√∫squeda O(n)inserci√≥n O(1) ?
00:33:08	MACARENA MU√ëOZ:	tengo que recorrer todo
00:33:11	Mat√≠as Patricio Duhalde:	secuencial
00:33:12	Tom√°s C:	O(n) pero la insercion es mas eficiente
00:33:12	VICENTE ERRAZURIZ QUIROGA:	> b√∫squeda binaria = O(log(n))?Sip
00:33:29	Sol Covacic Palet:	tambien seria O(n) entonces?
00:33:33	Eduardo Oteiza:	pregunta del log en b√∫squeda binaria, es en base 2?
00:33:42	Teresita S:	Y se tienen que hacer un nuevo arreglo cierto? Y por cada oveja?
00:33:49	Javiera Ochoa Guin-Po:	se entiende
00:33:54	VICENTE ERRAZURIZ QUIROGA:	> pregunta del log en b√∫squeda binaria, es en base 2?Si
00:34:23	VICENTE ERRAZURIZ QUIROGA:	> Y se tienen que hacer un nuevo arreglo cierto? Y por cada oveja?En realidad no! Pero ya vamos a ver como hacerlo para no tener que crear muchos arreglos
00:34:49	VICENTE ERRAZURIZ QUIROGA:	(El algoritmo se puede ejecutar in-place, igual que selection sort)
00:35:32	Constanza Osorio:	yes
00:37:06	Pablo Vejar:	eso es lo que hace el ‚Äúnext‚Äù en el archivo que subieron de listas ligadas?
00:37:16	VICENTE ERRAZURIZ QUIROGA:	> eso es lo que hace el ‚Äúnext‚Äù en el archivo que subieron de listas ligadas?efectivamente!
00:38:24	ALONSO GOMEZ HERRERA:	Solo hay que cambiar el valor de los punteros?
00:38:27	ALONSO ORTEGA LOYOLA:	cambiar el puntero del elemento anterior y asignar el puntero del que se insert√≥ al elemento siguiente 
00:38:41	ALONSO GOMEZ HERRERA:	Eso mismo
00:39:43	Juan Jim√©nez:	sii
00:39:44	Sol Covacic Palet:	sip
00:39:45	Teresita S:	Si
00:39:46	Cristian Alonso Carrasco:	si
00:40:04	ALONSO GOMEZ HERRERA:	Si
00:40:22	Piero Tassara:	O(1)
00:40:25	PABLO ARANEDA:	O(19?
00:40:25	Javiera Ochoa Guin-Po:	O(1)
00:41:12	ALONSO ORTEGA LOYOLA:	se usa hacer una combinaci√≥n de arreglos y listas ligadas?
00:41:48	VICENTE ERRAZURIZ QUIROGA:	> se usa hacer una combinaci√≥n de arreglos y listas ligadas?Va a depender del problema que quieras resolver
00:41:57	Benjam√≠n √Ålvarez:	O(n)
00:41:58	Piero Tassara:	O(n)
00:41:58	VICENTE ERRAZURIZ QUIROGA:	pero todo vale!
00:42:07	JADRINA DE ANDRADE E SILVA:	En la tarea es ser√≠a mejor usar listas ligadas que arreglos?
00:42:11	Juan Jim√©nez:	Entonces, que establece que una sea mejor que la otra?
00:42:16	Benjam√≠n √Ålvarez:	pero no es mejor el caso promedio con lista ligada?
00:42:23	VICENTE ERRAZURIZ QUIROGA:	si, en complejidad
00:42:26	VICENTE ERRAZURIZ QUIROGA:	pero en la practica
00:42:31	Joaqu√≠n Mu√±oz:	en arreglos la inserci√≥n es O(n) porque hay que correr la posici√≥n en memoria de cada elemento
00:42:32	VICENTE ERRAZURIZ QUIROGA:	los arreglos al estar contiguous en memoria
00:42:33	Joaqu√≠n Mu√±oz:	??
00:42:36	VICENTE ERRAZURIZ QUIROGA:	aprovechan la cach√©
00:42:47	VICENTE ERRAZURIZ QUIROGA:	y eso acelera mucho el proceso
00:43:00	Juan Jim√©nez:	ah perfecto entonces de todas formas termina siendo mas rpido
00:43:01	Juan Jim√©nez:	rapdo
00:43:01	FELIPE WILLMER MINO:	esto es independiente a a d√≥nde est√© guardado en memoria? no s√© si lo mencionaron
00:43:41	VICENTE ERRAZURIZ QUIROGA:	> esto es independiente a a d√≥nde est√© guardado en memoria? no s√© si lo mencionaronSi te refieres al HEAP vs el STACK, si, un arreglo en ambos aprovecha la cach√©
00:44:34	ALONSO ORTEGA LOYOLA:	en c uno tendr√≠a que definir el orden de las letras?
00:44:51	CRISTIAN OBERPAUR KOHLER:	no creo
00:44:52	VICENTE ERRAZURIZ QUIROGA:	no, los char trabajan como que 'b' > 'a'
00:44:58	ALONSO ORTEGA LOYOLA:	ahhh
00:45:05	CRISTIAN OBERPAUR KOHLER:	los compara por ascii
00:45:13	VICENTE ERRAZURIZ QUIROGA:	de hecho 'b' == 'a'+1
00:45:25	Pablo Rademacher:	y las mayusculas??
00:45:34	VICENTE ERRAZURIZ QUIROGA:	las mayusculas son menores
00:45:38	VICENTE ERRAZURIZ QUIROGA:	que las minusculas
00:45:45	Pablo Rademacher:	buenaaa
00:45:46	FELIPE WILLMER MINO:	:o
00:46:03	Fabi√°n Sep√∫lveda:	es normal sentir que ya me heche el ramo?
00:46:18	VICENTE ERRAZURIZ QUIROGA:	> es normal sentir que ya me heche el ramo?por qu√©?!
00:46:29	Felipe Guzm√°n:	en este caso no se usa algo extra de memoria para "recordar" la ultima letra que fue reemplazada
00:46:30	Felipe Guzm√°n:	?
00:46:33	PABLO ARANEDA:	fabian, ve los videos y empieza la tarea y se te pasa
00:46:35	Sol Covacic Palet:	:C
00:46:44	Juan Jim√©nez:	estos replies los estas haciendo a mano o zoom tiene algo para quotear comentarios?
00:46:45	Javiera Ochoa Guin-Po:	üò¢
00:46:50	Tom√°s C:	256 porque para escribir la √± es alt + 164
00:46:52	Benjam√≠n Aldana R.:	F
00:46:54	PABLO ARANEDA:	cuando el programa compila, se siente esperanza
00:46:56	Nico Ben√≠tez:	F
00:47:01	Jorge Araneda:	yo tambien me siento parecido pero cuando termine la tarea estudiar√© m√°s
00:47:07	VICENTE ERRAZURIZ QUIROGA:	> estos replies los estas haciendo a mano o zoom tiene algo para quotear comentarios?los estoy hacienda a mano pq el chat de szoom es pesimo y no te permite hacer quotes xD
00:47:10	Jorge Araneda:	y espero entender mejor la materia
00:47:59	Juan Jim√©nez:	factorial?
00:48:09	Cristian Alonso Carrasco:	llega algo correcto
00:48:18	SEBASTIAN ZABALA MARTINEZ:	pero esta acotado por arriba por eso
00:48:23	Pablo Rademacher:	seria n^2/2 \in O(n^2)
00:48:24	ALONSO GOMEZ HERRERA:	Pero la suma de 1 hasta a n deber√≠a ar algo a cuadratico o no?
00:48:27	LUCAS VAN SINT JAN CAMPOS:	> los estoy haciendo a mano pq ep chat de szoom es pesimo y no te perimite hacer quotes xD
00:48:33	LUCAS VAN SINT JAN CAMPOS:	Clase por discord entonces
00:48:33	Piero Tassara:	Hay que ver el worst case o no?
00:48:35	ALONSO GOMEZ HERRERA:	Se llega al mismo resultado pero creo que no
00:48:37	JOAQUIN ALLIENDE VACCARO:	con n chicos no, pero para n grandes si se cumple
00:48:39	JULI√ÅN GARC√çA:	es el peor caso
00:48:41	Florencia Valdivia:	Tomamos el peor caso
00:48:44	JOAQUIN ALLIENDE VACCARO:	eso dir√≠a yo jaaja
00:48:49	LAURENCE GOLBORNE:	en promedio no es n/2?
00:48:51	PABLO ARANEDA:	porque es n*(n+1)/2 ?
00:49:07	VICENTE ERRAZURIZ QUIROGA:	pero
00:49:11	VICENTE ERRAZURIZ QUIROGA:	el 1/2 que tienes ahi
00:49:14	VICENTE ERRAZURIZ QUIROGA:	multiplicando el n
00:49:20	LAURENCE GOLBORNE:	se va
00:49:20	VICENTE ERRAZURIZ QUIROGA:	es despreciable
00:49:22	VICENTE ERRAZURIZ QUIROGA:	se va
00:49:24	VICENTE ERRAZURIZ QUIROGA:	efectivamente
00:49:24	VICENTE ERRAZURIZ QUIROGA:	:)
00:50:25	JULI√ÅN GARC√çA:	1+2+...+n = (n)(n+1)/2 que ser√≠an los desplazamientos en un array, creo
00:52:04	Matias L√≥pez:	No 
00:52:04	Christian Carstens:	Va bieen
00:52:05	NICOLAS ORELLANA DRAGO:	Seg√∫n yo va bien
00:52:05	Matias L√≥pez:	va bien
00:52:05	JOAQUIN ALLIENDE VACCARO:	esta bien seg√∫n yo
00:52:10	Christian Eilers:	vabene
00:52:32	Eduardo Oteiza:	O(n) pq no sabe que est√° ordenado y los elementos los va poniendo al final en la nueva lista
00:53:15	Cristian Hinostroza:	cabros, como van probando porciones peque√±as de su c√≥digo, en la tarea?
00:53:23	Cristian Hinostroza:	como para ver si van bien?
00:53:34	Pablo Vejar:	me sumo a la pregunta de cristian
00:53:34	Juan Jim√©nez:	Cuanta memoria es allocated al cache normalmente?
00:53:37	PABLO ARANEDA:	me funcionan las cosas por separado en la tarea, cuando las junto, no
00:53:38	LAURENCE GOLBORNE:	creo q su punto va por la parte en que se dec√≠a que no se necesitaba memoria adicional
00:53:54	Cristian Alonso Carrasco:	yo part√≠ usando solo celcula despu√©s celula+mould
00:53:56	Tom√°s C:	1 a 6 megas (?)
00:53:58	Constanza Osorio:	mmm
00:54:04	Joaqu√≠n Mu√±oz:	usando make ves si esta bien en sintaxis y con valgrind ves si tienes errores de memoria 
00:54:21	PABLO ARANEDA:	Ooh, y yo que hice esos tests a mano
00:54:26	MOISES SAAVEDRA CACERES:	Alguna gu√≠a para hacer la funci√≥n BUD bien?
00:54:28	Constanza Osorio:	yo me hice test aparte para revisar por comando
00:54:45	Felipe Guzm√°n:	el tiempo que se pide en los tests dificiles es usando valgrind?
00:54:50	MOISES SAAVEDRA CACERES:	se hace NULL o free? :(
00:54:58	DANIEL SOTO SILVA:	el c√≥digo Python solo es para comparar velocidades ?? no hay que hacer nuestro c√≥digo en C con una estructura parecida a como est√° en el c√≥digo Python ?
00:55:19	Felipe Guzm√°n:	free se usa cuando haces alloc moises
00:55:23	Sol Covacic Palet:	tan re wenos los tests
00:55:29	AGUSTIN RIOS:	yo la hice igual
00:55:30	AGUSTIN RIOS:	xddd
00:55:31	PABLO ARANEDA:	todos hacen print?
00:55:31	Matias Cea:	en que lugar est√°n los test?
00:55:34	LAURENCE GOLBORNE:	cuanto maoma se debeia demorar el con carga? 
00:55:38	AGUSTIN RIOS:	y en test hard se demora 1.5 s
00:55:40	Matias Cea:	gracias
00:55:54	Felipe Guzm√°n:	ah ya
00:55:54	AGUSTIN RIOS:	a lo mas
00:56:16	SEBASTI√ÅN CARRASCO:	La comparaci√≥n de tiempo basta con que sea una tabla con los tiempos? y despu√©s poner lo que hay que investigar
00:56:18	JOAQUIN ALLIENDE VACCARO:	cuando se corre con time cual de los 3 outputs se considera como el tiempo?
00:56:24	Felipe Guzm√°n:	el de python como recibe el input y archivo de output?
00:56:28	Diego Gazmuri:	En la tarea deber√≠amos usar todo lo que fue explicado en los videos?
00:56:41	PABLO ARANEDA:	Felipe, esta en el readme de la tarea
00:56:57	Felipe Guzm√°n:	gracias
00:56:58	Nico Ben√≠tez:	no sirve un pantallazo? jajaj
00:57:03	Nico Ben√≠tez:	:(
00:57:21	MARIO GOMEZ HERRERA:	profe no me qued√≥ muy claro lo de n*O(n)
00:57:26	VICENTE ERRAZURIZ QUIROGA:	mas dudas de la T0 al discord! ->
00:57:36	PABLO ARANEDA:	O(n)
00:57:46	JULI√ÅN GARC√çA:	hay que insertar n veces y cada insercion es O(n)
00:57:56	Eduardo Oteiza:	O(n) es lo que demoras en recorrer la lista ligada y debes recorrerlo n veces
00:58:07	Eduardo Oteiza:	n*O(n) = O(n^2)
00:58:22	VICENTE ERRAZURIZ QUIROGA:	gracias a todos por responder :)
00:58:29	Eduardo Oteiza:	(lista ligada, arreglo)
00:59:31	MARIO GOMEZ HERRERA:	muchas gracias!
01:00:33	Fabi√°n Sep√∫lveda:	toma tiempo max?
01:00:35	Eduardo Oteiza:	Se demorar√° lo mismo
01:00:37	PABLO ARANEDA:	O(n)
01:00:38	Juan Jim√©nez:	se demora n
01:00:55	ALONSO ORTEGA LOYOLA:	2n
01:00:56	Jorge Araneda:	pero la comparaci√≥n en s√≠ no sigue tomando n?
01:00:57	ALONSO ORTEGA LOYOLA:	?
01:01:12	Eduardo Oteiza:	tiempo 2n es lo mismo que n, no?
01:01:14	PABLO ARANEDA:	n
01:01:15	Mart√≠n Ocqueteau:	n-1 comparaciones
01:01:15	ALONSO GOMEZ HERRERA:	n
01:01:16	VICENTE ERRAZURIZ QUIROGA:	son n-1 comparaciones, y cada una determina que no hay que mover nada
01:01:17	Pablo Rademacher:	se demora n^2
01:01:39	VICENTE ERRAZURIZ QUIROGA:	> tiempo 2n es lo mismo que n, no?si, las constantes que multiplican n se van
01:01:48	ALONSO ORTEGA LOYOLA:	complejidad*
01:01:52	Pablo Rademacher:	pero se hicieron 1 + 2+ 3+... = n^2/2 o no??
01:01:55	VICENTE ERRAZURIZ QUIROGA:	eso significa que O(10000n) = O(2n) = O(n)
01:02:24	VICENTE ERRAZURIZ QUIROGA:	> pero se hicieron 1 + 2+ 3+... = n^2/2 o no??no, porque no hicimos ninguna inserci√≥n, y eran las inserciones lo que nos costaban pasos
01:02:30	JULI√ÅN GARC√çA:	Se hacen 1+1+1+1+1+1+1+... = n porque no se mueven los datos
01:02:47	ALONSO ORTEGA LOYOLA:	pero un paso es acceder y otro comparar
01:02:48	ALONSO GOMEZ HERRERA:	En selection sort se recorre siempre el array completo o no
01:02:57	VICENTE ERRAZURIZ QUIROGA:	> En selection sort se recorre siempre el array completo o noefectivamente
01:02:58	RODRIGO GEVERT WEIL:	entonces insertion sort es Omega(n)
01:03:15	VICENTE ERRAZURIZ QUIROGA:	> entonces insertion sort es Omega(n)SI!
01:03:42	Fabi√°n Sep√∫lveda:	pero no que era O(n**2)
01:03:51	Fabi√°n Sep√∫lveda:	?
01:03:52	Felipe Guzm√°n:	pero esto es por abajo
01:03:54	VICENTE ERRAZURIZ QUIROGA:	omega y O son letras distintas
01:03:58	Eduardo Oteiza:	osea cota maxima y minima
01:03:59	ALONSO GOMEZ HERRERA:	Es O(N**2) en el peor caso posible
01:04:03	Fabi√°n Sep√∫lveda:	ahh lol
01:04:04	ALONSO GOMEZ HERRERA:	Pero es O(n) en el mejor caso posible
01:04:04	Fabi√°n Sep√∫lveda:	vale
01:04:09	VICENTE ERRAZURIZ QUIROGA:	si, O denota el peor caso, Omega el major caso
01:04:17	VICENTE ERRAZURIZ QUIROGA:	(maldito autocorrect de zoom)
01:04:21	ALONSO GOMEZ HERRERA:	Omega*
01:04:27	Eduardo Oteiza:	el peor caso era cuando est√° ordenado al rev√©s?
01:04:30	Joaqu√≠n Mu√±oz:	vicho porque en inserci√≥n sort la comparaci√≥n es O(n) no lo tengo claro
01:04:36	Felipe Guzm√°n:	ordenado es el mejor
01:04:50	Felipe Guzm√°n:	ah al rev√©s
01:04:50	Felipe Guzm√°n:	xd
01:05:30	Liat Israel:	Las diapo est√°n en el repo? Las que vi no tienen esta parte :(
01:05:42	VICENTE ERRAZURIZ QUIROGA:	> vicho porque en inserci√≥n sort la comparaci√≥n es O(n) no lo tengo claroEs una comparaci√≥n por cada element para saber si hay que moverlo. Luego de cada comparacion nos damos cuenta que no hay que moverlo asi que pasamos al siguiente. Por lo tanto se hacen n comparaciones en total.
01:05:48	Felipe Guzm√°n:	ahora la actualizaron
01:05:51	VICENTE ERRAZURIZ QUIROGA:	> Las diapo est√°n en el repo? Las que vi no tienen esta parte :(Vuelve a descargarlas
01:06:16	ALONSO ORTEGA LOYOLA:	segun yo son m√°s de una comparaci√≥n por elemento
01:06:21	ALONSO ORTEGA LOYOLA:	porque hay que ver donde queda
01:06:35	VICENTE ERRAZURIZ QUIROGA:	> segun yo son m√°s de una comparaci√≥n por elementoporque hay que ver donde quedarevisa el pseudoc√≥digo
01:06:47	LAURENCE GOLBORNE:	tampoco importa si son mas comparaciones
01:06:54	VICENTE ERRAZURIZ QUIROGA:	adem√°s...
01:06:55	LAURENCE GOLBORNE:	es el mismo O igual
01:07:01	VICENTE ERRAZURIZ QUIROGA:	si son 2 comparaciones por elemento
01:07:06	VICENTE ERRAZURIZ QUIROGA:	O(2n) = O(n)
01:07:19	Joaqu√≠n Mu√±oz:	no que insertion sort solo se compara con el de al lado vicho? en ese caso no se deber√≠a comparar con los n elementos 
01:07:46	VICENTE ERRAZURIZ QUIROGA:	> no que insertion sort solo se compara con el de al lado vicho? en ese caso no se deber√≠a comparar con los n elementoscada elemento se compara con el anterior para ver si tiene que retroceder
01:07:48	ALONSO ORTEGA LOYOLA:	se compara con los anteriores hasta que no se cumpla la condici√≥n
01:08:03	ALONSO ORTEGA LOYOLA:	de que sea menor
01:09:59	Diego Quezada:	Pero eso depende del criterio de ordenamientoo siempre es una inversi√≥n si es mayor? 
01:10:16	VICENTE ERRAZURIZ QUIROGA:	en este caso ordenamos de menor a mayor
01:10:39	Joaquin Terreros:	Eso quiere decir que para ordenar ese arreglo se requieren 9 operaciones o no tiene relaci√≥n?
01:10:49	Josefina Fern√°ndez:	pero profesor pasado cierto punto de desorden no lo podemos usar a nuestro favor? el orden inverso
01:11:27	JOAQUIN ALLIENDE VACCARO:	pero para calcular la cantitade de inversiones es O(n^2) o no?
01:11:32	VICENTE ERRAZURIZ QUIROGA:	> Eso quiere decir que para ordenar ese arreglo se requieren 9 operaciones o no tiene relaci√≥n?Va por ahi! pero not really :) ya vamos a analizar qu√© significa esto
01:11:39	JOAQUIN ALLIENDE VACCARO:	osea asi "a la r√°pida"
01:11:52	VICENTE ERRAZURIZ QUIROGA:	> pero para calcular la cantitade de inversiones es O(n^2) o no?Si, no nos interesa calcular esto‚Ä¶
01:12:08	VICENTE ERRAZURIZ QUIROGA:	lo vamos a usar para demostrar una propiedad
01:12:10	VICENTE ERRAZURIZ QUIROGA:	:)
01:12:47	Fabi√°n Sep√∫lveda:	2 k?
01:12:47	PABLO ARANEDA:	log(k) ?
01:12:49	VICENTE ERRAZURIZ QUIROGA:	> pero profesor pasado cierto punto de desorden no lo podemos usar a nuestro favor? el orden inversoEfectivamente, un arreglo ordenado al reves tiene el n√∫mero m√°ximo de inversiones
01:13:06	Cristian Hinostroza:	O(k*n)
01:13:14	JULI√ÅN GARC√çA:	k(k+1)/2? as√≠ al ojo
01:13:14	Cristian Hinostroza:	?
01:14:10	PABLO ARANEDA:	O(nlog(k)) 
01:14:37	Carlos Paredes:	pero si usaramos solo inversiones no seria mas parecido a bubble sort?
01:15:12	PABLO ARANEDA:	O(n+k) ?
01:16:14	JULI√ÅN GARC√çA:	0 o 1 inversiones no?
01:16:25	JULI√ÅN GARC√çA:	ah no mentira
01:16:38	VICENTE ERRAZURIZ QUIROGA:	(y un intercambio no genera nuevas inversions)
01:16:46	Pablo Rademacher:	0
01:16:46	Tom√°s C:	0
01:16:47	JULI√ÅN GARC√çA:	0
01:16:47	Jos√© Ignacio Retamal:	0
01:16:47	Benjam√≠n √Ålvarez:	0
01:16:48	MACARENA MU√ëOZ:	0
01:16:48	Tom√°s Dubost:	0
01:16:50	PABLO ARANEDA:	k tiende a n!/2 en promedio?
01:17:00	Fabi√°n Sep√∫lveda:	k! en el peor?
01:17:08	MACARENA MU√ëOZ:	n
01:17:08	Tom√°s C:	n-1
01:17:09	Carlos Paredes:	n/2
01:17:09	JULI√ÅN GARC√çA:	n^2
01:17:10	Tom√°s Dubost:	n
01:17:14	Mart√≠n Ocqueteau:	n(n-1)/2
01:17:14	PABLO ARANEDA:	n!
01:17:15	LAURENCE GOLBORNE:	n!
01:17:17	Diego Quezada:	n! 
01:17:18	Benjam√≠n √Ålvarez:	(n - 1)(n - 2)/2
01:17:18	ALONSO GOMEZ HERRERA:	n^2 - n
01:17:19	Fabi√°n Sep√∫lveda:	descendientte
01:17:20	ANIBAL ERRAZURIZ VERGARA:	n^2-n
01:17:23	Elisa Fern√°ndez:	ordenados de mayor a menor
01:17:23	JOSEMARIA ONETTO:	n^2
01:17:38	Fabi√°n Sep√∫lveda:	habran n! inversiones en ese caso
01:17:40	ALONSO ORTEGA LOYOLA:	n!
01:17:42	Fabi√°n Sep√∫lveda:	a nono
01:17:47	PABLO ARANEDA:	(n^2-n)/2
01:17:48	Fabi√°n Sep√∫lveda:	binomial(n,2)
01:17:53	Teresita S:	(N-1)!
01:18:12	VICENTE ERRAZURIZ QUIROGA:	parece que van a tener que repasar combinatoria :c
01:18:16	VICENTE ERRAZURIZ QUIROGA:	veo muchos factoriales
01:18:36	Fabi√°n Sep√∫lveda:	pero las parejas de a 2 en un grupo de ene es bin(n,2) :c
01:18:42	VICENTE ERRAZURIZ QUIROGA:	pero con binomial si sale
01:18:43	VICENTE ERRAZURIZ QUIROGA:	:)
01:18:46	Jorge Araneda:	me perd√≠ con lo ultimo, como sacan la cantidad de parejas D:
01:18:46	ALONSO GOMEZ HERRERA:	Pero si k = (n^2-n)/2 la suma con n no daria n^2 o si?
01:19:29	PABLO ARANEDA:	(n^2 - 2n)/8 ?
01:19:33	VICENTE ERRAZURIZ QUIROGA:	da (n + n^2) / 2
01:19:41	VICENTE ERRAZURIZ QUIROGA:	y eso considerando solo el de mayor exponente
01:19:45	SEBASTI√ÅN ELSACA:	O(n+k) no es lo mismo que O(n)?
01:19:51	VICENTE ERRAZURIZ QUIROGA:	y eliminando el termino constante
01:20:00	VICENTE ERRAZURIZ QUIROGA:	queda como n^2
01:20:07	ALONSO GOMEZ HERRERA:	Ahhh sii
01:20:09	VICENTE ERRAZURIZ QUIROGA:	O(n^2)
01:20:11	ALONSO GOMEZ HERRERA:	Gracias Vicente ahi me quedo claro
01:20:25	JULI√ÅN GARC√çA:	O(n + k) = O(max(n, k))
01:21:38	Eduardo Oteiza:	el caso promedio como todas las permutaciones/cantidad de elementos?
01:21:43	Fabi√°n Sep√∫lveda:	n!
01:21:44	Mart√≠n Ocqueteau:	n!
01:21:47	VICENTE ERRAZURIZ QUIROGA:	ahora si jaja
01:21:50	Fabi√°n Sep√∫lveda:	alfin!
01:21:52	Christian Carstens:	jajajaja
01:23:20	VICENTE ERRAZURIZ QUIROGA:	> el caso promedio como todas las permutaciones/cantidad de elementos?no entiendo la pregunta
01:23:44	Eduardo Oteiza:	nothing
01:23:46	Fabi√°n Sep√∫lveda:	como es la secuencia de las inversiones para cada permutaci√≥n?
01:24:12	Teresita S:	Como se calcula el caso promedio?
01:24:13	JULI√ÅN GARC√çA:	(todas las permutaciones)/(cantidad de elementos)
01:24:42	Fabi√°n Sep√∫lveda:	caso promedio = Suma de inversiones para cada permutaci√≥n / cantidad de permutaciones
01:25:26	JULI√ÅN GARC√çA:	si dado que no hay numeros repetidos
01:25:36	Teresita S:	Gracias
01:25:37	VICENTE ERRAZURIZ QUIROGA:	> Como se calcula el caso promedio?cantidad promedio de inversiones = suma(cantidad de inversions por cada permutacion) / (cantidad total de permutaciones)
01:25:56	Franco Berries:	Si profe
01:26:00	VICENTE ERRAZURIZ QUIROGA:	> caso promedio = Suma de inversiones para cada permutaci√≥n / cantidad de permutacionesay me demor√© en escribirlo jaja
01:26:26	Teresita S:	Gracias
01:27:24	PABLO ARANEDA:	sigue O(n)
01:27:26	Fabi√°n Sep√∫lveda:	o(n**2)
01:27:28	PABLO ARANEDA:	n~2
01:27:31	LAURENCE GOLBORNE:	en promedio es O(n^2)
01:28:22	ALONSO GOMEZ HERRERA:	A que se refiere en exactamente una de l y lr el par ordenando...
01:28:42	VICENTE ERRAZURIZ QUIROGA:	que el par (x,y)
01:28:45	VICENTE ERRAZURIZ QUIROGA:	o es inversion en L
01:28:48	VICENTE ERRAZURIZ QUIROGA:	o es inversion en Lr
01:28:50	VICENTE ERRAZURIZ QUIROGA:	pero no en los dos
01:28:58	ALONSO GOMEZ HERRERA:	Aaah ya muchas gracias
01:28:59	VICENTE ERRAZURIZ QUIROGA:	(y obligatoriamente en uno de ellos!)
01:29:02	ALONSO GOMEZ HERRERA:	si
01:29:30	Benjam√≠n √Ålvarez:	esta brigido el an√°lisis
01:29:42	ALONSO GOMEZ HERRERA:	para poder hacer lo que dice el compa√±ero creo se deber√≠a poder asegurar que los casos de peor a mejor aumentan de forma lineal
01:29:55	ALONSO GOMEZ HERRERA:	Si ese es el caso si podr√≠as por lo que tengo entendido
01:30:04	Sol Covacic Palet:	‚Äúel numero total de estos pares‚Äù se refiere a inversiones, o a pares ordenados?
01:30:27	VICENTE ERRAZURIZ QUIROGA:	se refiere a inversiones
01:30:42	Teresita S:	sum(de i entre 1 y n) n-i
01:30:42	Sol Covacic Palet:	aaaaaaaaaa
01:30:43	VICENTE ERRAZURIZ QUIROGA:	que es la misma cantidad que el numero total de pares
01:30:51	Sol Covacic Palet:	agora sim entendo
01:31:07	VICENTE ERRAZURIZ QUIROGA:	esta diciendo hay esta cantidad de pares, y todos ellos son inversion en L o en Lr
01:31:14	PABLO ARANEDA:	O(n*n)
01:31:16	LAURENCE GOLBORNE:	n**2
01:31:21	Benjam√≠n √Ålvarez:	O(n^2)
01:31:26	VICENTE ERRAZURIZ QUIROGA:	por lo tanto inversions(L) + inversions(Lr) = cantidad total de pares
01:32:27	Benjamin Urrutia:	En la practica que se este dividiendo por 4 en el caso promedio no hace que este algoritmo sea m√°s rapido que selection sort (en un caso promedio tambien)?
01:32:32	LAURENCE GOLBORNE:	Todo esto para volver a llegar a n**2 :'( 
01:32:43	Fabi√°n Sep√∫lveda:	pero estaba bonito el argumento si
01:33:40	JULI√ÅN GARC√çA:	bubble-sort=o(n¬≤)?
01:34:04	VICENTE ERRAZURIZ QUIROGA:	si, bubble sort es cuadr√°tico
01:34:09	VICENTE ERRAZURIZ QUIROGA:	y mal implementado puede ser c√∫bico!
01:34:14	JULI√ÅN GARC√çA:	ewe
01:34:16	Eduardo Oteiza:	:o
01:34:18	Sol Covacic Palet:	:0
01:34:26	Felipe Guzm√°n:	bubble no more
01:34:39	JOAQUIN ALLIENDE VACCARO:	el peor caso es al menos O(n^2) o no? podr√≠a ser peor aun
01:34:41	Josefina Fern√°ndez:	los pares x,y de la demostraci√≥n no son ordenados? no entend√≠ por qu√© eran n*(n-1)/2 pares
01:34:44	Eduardo Oteiza:	get away from bubble
01:35:01	VICENTE ERRAZURIZ QUIROGA:	> En la practica que se este dividiendo por 4 en el caso promedio no hace que este algoritmo sea m√°s rapido que selection sort (en un caso promedio tambien)?Si, este algoritmo deberia ser siempre mas o igual de rapido que selection sort o 
01:35:08	VICENTE ERRAZURIZ QUIROGA:	(ignora ese o al final)
01:35:13	Benjamin Urrutia:	buena, gracias!
01:35:28	ALONSO GOMEZ HERRERA:	La ultima duda como era exactamente a la expresi√≥n n(n-1)/2?
01:35:29	VICENTE ERRAZURIZ QUIROGA:	> los pares x,y de la demostraci√≥n no son ordenados? no entend√≠ por qu√© eran n*(n-1)/2 paresefectivamente, no son ordenados.
01:35:38	ALONSO GOMEZ HERRERA:	Ya que nP2 no deber√≠a ser n*(n-1)?
01:35:50	Josefina Fern√°ndez:	ok, gracias!
01:35:55	Victoria Matthews:	chao, gracias :)
01:36:02	Pablo Vejar:	gracias profe y vicho!
01:36:08	Eduardo Oteiza:	gracias!!
01:36:12	VICENTE ERRAZURIZ QUIROGA:	> La ultima duda como era exactamente a la expresi√≥n n(n-1)/2?Es (n-1) + (n-2) + (n-3) ‚Ä¶ + 3 + 2 + 1
01:36:19	Joaquin Terreros:	Este viernes hay ayudant√≠a verdad?
01:36:24	VICENTE ERRAZURIZ QUIROGA:	si, hay ayudant√≠a
01:36:31	VICENTE ERRAZURIZ QUIROGA:	vamos a practicar demostraciones y c√°lculos de complejidad
01:36:31	Joaquin Terreros:	Vale! Gracias :D
01:36:44	Josefina Fern√°ndez:	muchas gracias por la clase!!
01:37:03	Tom√°s C:	chao! gracias profe y vicho
01:37:45	Constanza Osorio:	inscritos = \infty
01:38:13	LAURENCE GOLBORNE:	cupos != \infty
01:38:13	Teresita S:	Chao Profe! gracias
01:38:30	Gustavo Toro:	en el pseudocodigo, el intercambio se hace entre elementos contiguos en el arreglo. Eso cambiar√≠a la complejidad?
01:38:36	JOAQUIN ALLIENDE VACCARO:	chao profe, gracias
01:38:39	Gustavo Toro:	porque ser√≠an m√°s inversiones?
01:38:56	VICENTE ERRAZURIZ QUIROGA:	> en el pseudocodigo, el intercambio se hace entre elementos contiguos en el arreglo. Eso cambiar√≠a la complejidad?no, estamos hacienda todos los c√°lculos en base a eso
01:39:20	VICENTE ERRAZURIZ QUIROGA:	es por eso precisamente que tanto insertionsort como selection sort no pueden ser m√°s rapidos que O(n^2) en el peor caso
01:39:43	Felipe Guzm√°n:	gracias chaito
01:39:51	Gustavo Toro:	ok gracias
01:40:51	Fabi√°n Sep√∫lveda:	Chao, gracias!
01:41:29	JULI√ÅN GARC√çA:	y no ser√≠a m√°s rapido hacer una pasada previa para saber en qu√© direcci√≥n es m√°s rapido ordenar la lista?
01:41:53	-:	No lo cortaa
